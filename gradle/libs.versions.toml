[versions]
accompanist = "0.28.0"
admob = "22.1.0"
androidDesugarJdkLibs = "2.0.3"
androidGradlePlugin = "8.2.0-alpha08"
androidx-compose-foundation = "1.5.0-beta02"
androidxActivity = "1.8.0-alpha05"
androidxAppCompat = "1.6.1"
androidxCompose = "1.5.0-beta02"
androidxComposeBom = "2022.11.00"
androidxComposeCompiler = "1.4.6"
androidxComposeMaterial3 = "1.2.0-alpha02"
androidxComposeRuntimeTracing = "1.0.0-alpha03"
androidxConstraintLayout = "1.1.0-alpha10"
androidxCore = "1.10.1"
androidxCoreSplashscreen = "1.0.1"
androidxCustomView = "1.0.0"
androidxDataStore = "1.1.0-alpha04"
androidxEspresso = "3.5.1"
# Skipping version 2.6.0-alpha02 due to https://issuetracker.google.com/249686765
androidxLifecycle = "2.6.1"
androidxMacroBenchmark = "1.2.0-alpha15"
androidxMetrics = "1.0.0-alpha04"
androidxProfileinstaller = "1.3.1"
androidxSavedState = "1.2.1"
androidxStartup = "1.1.1"
androidxTestCore = "1.5.0"
androidxTestExt = "1.1.5"
androidxTestRules = "1.5.0"
androidxTestRunner = "1.5.2"
androidxTracing = "1.1.0"
androidxUiAutomator = "2.3.0-alpha03"
androidxWindowManager = "1.1.0"
androidxWork = "2.8.1"
coil = "2.2.2"
decomposeVersion = "2.0.0-beta-01"
firebaseBom = "32.1.0"
firebaseAnalytics = "21.2.2"
firebaseCrashlyticsKts = "18.3.6"
firebaseCrashylyticsPlugins = "2.9.2"
googleServicePlugin = "4.3.14"
hilt = "2.44.2"
hiltExt = "1.0.0"
jacoco = "0.8.7"
junit4 = "4.13.2"
kotlin = "1.8.20"
kotlinn = "1.8.0-RC"
kotlinxCollectionImmutable = "0.3.5"
kotlinxCoroutines = "1.6.4"
kotlinxDatetime = "0.4.0"
kotlinxSerializationJson = "1.5.0"
ksp = "1.8.10-1.0.9"
lint = "31.4.2"
littleVersion = "0.7.0"
maneVersion = "0.44.0"
okhttp = "4.10.0"
protobuf = "3.21.12"
protobufPlugin = "0.9.1"
retrofit = "2.9.0"
retrofitKotlinxSerializationJson = "0.8.0"
room = "2.5.1"
secrets = "2.0.1"
turbine = "0.8.0"
ktor = "2.3.0"
ktorKotlinxSerializationJson = "1.0.1"
timber = "5.0.1"
paging = "3.2.0-beta01"
pagingCompose = "3.2.0-beta01"
firebaseCrashlyticsPlugin = "2.9.5"
firebasePerfPlugin = "1.4.2"
gmsPlugin = "4.3.14"
composePlugin = "1.4.0"

koin = "3.4.2"
koinTest = "3.4.1"
koinCompose = "3.4.5"

moko = "0.22.0"

multiplatform_settings = "1.0.0"


sqlDelight = "2.0.0-alpha05"

[libraries]
accompanist-flowlayout = { module = "com.google.accompanist:accompanist-flowlayout", version.ref = "accompanist" }
admob-service = { module = "com.google.android.gms:play-services-ads-lite", version.ref = "admob" }
android-desugarJdkLibs = { module = "com.android.tools:desugar_jdk_libs_nio", version.ref = "androidDesugarJdkLibs" }
# Dependencies of the included build-logic
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivity" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidxAppCompat" }
androidx-benchmark-macro = { module = "androidx.benchmark:benchmark-macro-junit4", version.ref = "androidxMacroBenchmark" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "androidx-compose-foundation" }
androidx-compose-foundation-layout = { module = "androidx.compose.foundation:foundation-layout", version.ref = "androidx-compose-foundation" }
androidx-compose-material-iconsExtended = { module = "androidx.compose.material:material-icons-extended", version.ref = "androidxCompose" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "androidxComposeMaterial3" }
androidx-compose-material3-windowSizeClass = { module = "androidx.compose.material3:material3-window-size-class", version.ref = "androidxComposeMaterial3" }
androidx-compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "androidxCompose" }
androidx-compose-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "androidxCompose" }
androidx-compose-runtime-tracing = { module = "androidx.compose.runtime:runtime-tracing", version.ref = "androidxComposeRuntimeTracing" }
androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidxCompose" }
androidx-compose-ui-test = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidxCompose" }
androidx-compose-ui-testManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidxCompose" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidxCompose" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "androidxCompose" }
androidx-compose-ui-util = { module = "androidx.compose.ui:ui-util", version.ref = "androidxCompose" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "androidxConstraintLayout" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "androidxCoreSplashscreen" }
androidx-customview-poolingcontainer = { module = "androidx.customview:customview-poolingcontainer", version.ref = "androidxCustomView" }
androidx-dataStore-core = { module = "androidx.datastore:datastore", version.ref = "androidxDataStore" }
androidx-dataStore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "androidxDataStore" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtimeCompose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewModelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
androidx-metrics = { module = "androidx.metrics:metrics-performance", version.ref = "androidxMetrics" }
androidx-profileinstaller = { module = "androidx.profileinstaller:profileinstaller", version.ref = "androidxProfileinstaller" }
androidx-savedstate-ktx = { module = "androidx.savedstate:savedstate-ktx", version.ref = "androidxSavedState" }
androidx-startup = { module = "androidx.startup:startup-runtime", version.ref = "androidxStartup" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidxTestCore" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidxEspresso" }
androidx-test-ext = { module = "androidx.test.ext:junit-ktx", version.ref = "androidxTestExt" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidxTestRules" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidxTestRunner" }
androidx-test-uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "androidxUiAutomator" }
androidx-tracing-ktx = { module = "androidx.tracing:tracing-ktx", version.ref = "androidxTracing" }
androidx-window-manager = { module = "androidx.window:window", version.ref = "androidxWindowManager" }
androidx-work-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "androidxWork" }
androidx-work-testing = { module = "androidx.work:work-testing", version.ref = "androidxWork" }
coil-kt = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-kt-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coil-kt-svg = { module = "io.coil-kt:coil-svg", version.ref = "coil" }
decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decomposeVersion" }
decompose-android = { module = "com.arkivanov.decompose:extensions-android", version.ref = "decomposeVersion" }
decompose-compose-jetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decomposeVersion" }
firebase-bom = { group = "com.google.firebase", name = "firebase-bom", version.ref = "firebaseBom" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics-ktx" }
firebase-cloud-messaging = { group = "com.google.firebase", name = "firebase-messaging-ktx" }
firebase-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics-ktx" }
firebase-crashlytics-gradle = { group = "com.google.firebase", name = "firebase-crashlytics-gradle", version.ref = "firebaseCrashlyticsPlugin" }
firebase-performance = { group = "com.google.firebase", name = "firebase-perf-ktx" }
firebase-performance-gradle = { group = "com.google.firebase", name = "perf-plugin", version.ref = "firebasePerfPlugin" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-ext-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hiltExt" }
hilt-ext-work = { module = "androidx.hilt:hilt-work", version.ref = "hiltExt" }
junit4 = { module = "junit:junit", version.ref = "junit4" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlinx-collection-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinxCollectionImmutable" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
lint-api = { module = "com.android.tools.lint:lint-api", version.ref = "lint" }
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
protobuf-kotlin-lite = { module = "com.google.protobuf:protobuf-kotlin-lite", version.ref = "protobuf" }
protobuf-protoc = "com.google.protobuf:protoc:21.0-rc-1"
retrofit-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-kotlin-serialization = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofitKotlinxSerializationJson" }
room-compiler = "androidx.room:room-compiler:2.5.1"
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-paging = { module = "androidx.room:room-paging", version.ref = "room" }
paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "paging" }
paging-common = { module = "androidx.paging:paging-common", version.ref = "paging" }
paging-testing = { module = "androidx.paging:paging-testing", version.ref = "paging" }
paging-compose = { module = "androidx.paging:paging-compose", version.ref = "pagingCompose" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging-jvm", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

koin_core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin_android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin_android_compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinCompose" }
koin_android_workmanager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }
koin_test = { module = "io.insert-koin:koin-test", version.ref = "koinTest" }
koin_test_junit = { module = "io.insert-koin:koin-test-junit4", version.ref = "koin" }
koin_test_junit5 = { module = "io.insert-koin:koin-test-junit5", version.ref = "koin" }
koin_android_test = { module = "io.insert-koin:koin-android-test", version.ref = "koin" }


moko_resources_plugin = { module = "dev.icerock.moko:resources-generator", version.ref = "moko" }
moko_resources_compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko" }
moko_resources_test = { module = "dev.icerock.moko:resources-test", version.ref = "moko" }


sqldelight_plugin = { module = "com.squareup.sqldelight:gradle-plugin", version.ref = "sqlDelight" }

sqldelight_runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
sqldelight_coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqldelight_android_driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqldelight_sqlite_driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqldelight_primitive_adapter = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqlDelight" }
turbine_test = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
#leakcanary_android = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }

multiplatform_settings_core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform_settings" }
multiplatform_settings_noArg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatform_settings" }
multiplatform_settings_coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatform_settings" }
multiplatform_settings_serializtion = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatform_settings" }
multiplatform_settings_test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatform_settings" }
multiplatform_settings_datastore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "multiplatform_settings" }
# Dependencies of the included build-logic

ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
compose-gradlePlugin = { group = "org.jetbrains.compose", name = "compose-gradle-plugin", version.ref = "composePlugin" }

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
android-test = { id = "com.android.test", version.ref = "androidGradlePlugin" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashylyticsPlugins" }
firebase-perf = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePerfPlugin" }
google-services = { id = "com.google.gms.google-services", version.ref = "googleServicePlugin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
little = { id = "nl.littlerobots.version-catalog-update", version.ref = "littleVersion" }
manes = { id = "com.github.ben-manes.versions", version.ref = "maneVersion" }
protobuf = { id = "com.google.protobuf", version.ref = "protobufPlugin" }
secrets = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "secrets" }
gms = { id = "com.google.gms.google-services", version.ref = "gmsPlugin" }
