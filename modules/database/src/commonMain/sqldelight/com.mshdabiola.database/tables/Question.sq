import com.mshdabiola.model.data.Item;
import kotlin.collections.List;

CREATE TABLE IF NOT EXISTS questionEntity (
   id INTEGER PRIMARY KEY AUTOINCREMENT,
   nos INTEGER NOT NULL ,
   examId INTEGER NOT NULL ,
   content TEXT AS List<Item> NOT NULL,
   isTheory INTEGER DEFAULT 0,
   answer TEXT AS List<Item>,
   instructionId INTEGER,
   topicId INTEGER,
   FOREIGN KEY (examId) REFERENCES examEntity(id)
      ON DELETE CASCADE

);

getById:
SELECT *
FROM questionEntity
WHERE id = ?;

getAll:
SELECT *
FROM  questionEntity;

getAllWithExamId:
SELECT *
FROM  (
SELECT *
FROM  questionEntity
WHERE examId=?
ORDER BY nos ASC
)
ORDER BY isTheory ASC ;

insert:
INSERT INTO questionEntity(nos,examId,content,isTheory,answer,instructionId,topicId)
VALUES ?;

insertReplace:
INSERT OR REPLACE INTO questionEntity(id,nos,examId,content,isTheory,answer,instructionId,topicId)
VALUES ?;

deleteByID:
DELETE FROM questionEntity
WHERE id = ?;

update:
UPDATE questionEntity
SET examId=?,content=?,isTheory=?,answer=?,instructionId=?,topicId=?
WHERE id = ?;

deleteAll:
DELETE FROM questionEntity;

getRandom:
SELECT *
FROM questionEntity
ORDER BY RANDOM() LIMIT ?;

getMaxId:
SELECT max(id)
FROM questionEntity;
